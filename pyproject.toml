[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "personal-research-agent"
version = "0.1.0"
description = "AI-powered personal research assistant using LangChain and local LLMs"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Chao", email = "chao@example.com"}
]
keywords = ["ai", "research", "assistant", "langchain", "llm"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    # Core AI Framework - LangGraph for 2025 agent workflows
    "langgraph>=0.2.0",
    "langchain>=0.3.0",
    "langchain-community>=0.3.0",
    "langchain-core>=0.3.0",
    "langchain-openai>=0.2.0",
    "langchain-anthropic>=0.2.0",
    
    # Pydantic AI for structured outputs (2025 standard)
    "pydantic-ai>=0.0.13",
    "pydantic>=2.8.0",
    
    # Vector Database and Embeddings (2025 optimized)
    "chromadb>=0.5.0",
    "sentence-transformers>=3.0.0",
    "faiss-cpu>=1.8.0",
    "langchain-chroma>=0.1.0",
    "langchain-huggingface>=0.1.0",
    
    # Web and Document Processing
    "requests>=2.32.0",
    "httpx>=0.27.0",
    "beautifulsoup4>=4.12.0",
    "pypdf>=4.3.0",
    "python-docx>=1.1.0",
    "markdown>=3.6.0",
    "trafilatura>=1.12.0",  # Advanced web scraping
    
    # Memory and Persistence
    "redis>=5.0.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.13.0",
    
    # Security and Authentication (2025 standards)
    "cryptography>=42.0.0",
    "pyjwt>=2.8.0",
    "passlib>=1.7.4",
    
    # Configuration and Environment
    "python-dotenv>=1.0.0",
    "pydantic-settings>=2.4.0",
    
    # CLI and UI
    "click>=8.1.0",
    "rich>=13.7.0",
    "typer>=0.12.0",
    
    # API Framework
    "fastapi>=0.115.0",
    "uvicorn[standard]>=0.20.0",
    
    # Async and Utilities
    "aiofiles>=23.1.0",
    "asyncio-throttle>=1.0.2",
    "tenacity>=8.0.0",  # Retry logic
    
    # Monitoring and Observability
    "opentelemetry-api>=1.20.0",
    "opentelemetry-sdk>=1.20.0",
    "structlog>=23.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.9.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.6.0",
    "pre-commit>=3.5.0",
]

[project.scripts]
research-agent = "personal_research_agent.cli:main"

[project.urls]
Homepage = "https://github.com/chao/personal-research-agent"
Repository = "https://github.com/chao/personal-research-agent"
Issues = "https://github.com/chao/personal-research-agent/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["personal_research_agent"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "langchain.*",
    "chromadb.*",
    "sentence_transformers.*",
]
ignore_missing_imports = true
